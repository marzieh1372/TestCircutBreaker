server.port=8080

## Actuator
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.metrics.tags.application= Application Tags
management.health.circuitbreakers.enabled=true
management.health.ratelimiters.enabled=true


##Essentially, the configuration will allow 50% of failed calls to the service in the closed state,
# after which it'll open the circuit and start rejecting requests with the CallNotPermittedException.



##CircutBreaker
# ##The Threshold Percentage Above Which the Circuit Breaker will move from Closed to Open State.
##When the failure rate is equal or greater than the threshold the Circuit Breaker transitions to open
# and starts short-circuiting calls. In our case, this value is 50%, which means if 1 out of 2 requests are failed,
# the threshold will be reached, which will move the Circuit Breaker into an OPEN state.
resilience4j.circuitbreaker.instances.CircuitBreakerService.failure-rate-threshold=50
# ##The number of calls after which the error rate is calculated. I have assigned it with a small value for test purpose.
## This attribute ensures the failure rate is calculated once a minimum number of calls are executed.
# In our case, 10 requests must be executed before the failure rate calculation starts.
resilience4j.circuitbreaker.instances.CircuitBreakerService.minimum-number-of-calls=10
resilience4j.circuitbreaker.instances.CircuitBreakerService.automatic-transition-from-open-to-half-open-enabled=true
# ##Time in milliseconds, in which the circuit breaker is to stay in open state before moving to half-open state
## The time that the Circuit Breaker should wait before transitioning from open to half-open. In our case, it?s 5 seconds.
resilience4j.circuitbreaker.instances.CircuitBreakerService.wait-duration-in-open-state=5s
## Configures the number of permitted calls when the Circuit Breaker is half open. In our case, the limit is 3,
# which means only 3 requests will be processed in a 10-second window.
resilience4j.circuitbreaker.instances.CircuitBreakerService.permitted-number-of-calls-in-half-open-state=3
##Configures the size of the sliding window which is used to record the outcome of calls when the Circuit Breaker is closed.
resilience4j.circuitbreaker.instances.CircuitBreakerService.sliding-window-size=10
##Configures the type of the sliding window which is used to record the outcome of calls when the Circuit Breaker is closed.
#Sliding window can either be count-based or time-based.
resilience4j.circuitbreaker.instances.CircuitBreakerService.sliding-window-type=count_based
